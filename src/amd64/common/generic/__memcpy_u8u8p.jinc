inline 
fn __memcpy_u8u8p(
    reg ptr u8[LEN] out,
    reg u64 offset,
    reg uptr in,
    reg u64 inlen
) -> reg ptr u8[LEN]
{
    reg u64 i;

    i = 0;
    while (i < inlen) {
        out[offset] = (u8)[in + i];
        i += 1;
        offset += 1;
    }

    return out;
}

fn _memcpy_u8u8p(
    reg ptr u8[LEN] out,
    reg u64 offset,
    reg uptr in,
    reg u64 inlen
) -> reg ptr u8[LEN]
{
    out = __memcpy_u8u8p(out, offset, in, inlen);
    return out;
}

inline 
fn _x_memcpy_u8u8p(
    reg ptr u8[LEN] out,
    reg u64 offset,
    reg uptr in,
    reg u64 inlen
) -> reg ptr u8[LEN]
{
    out = out;
    offset = offset;
    in = in;

    out = _memcpy_u8u8p(out, offset, in, inlen);

    out = out;
    return out;
}
